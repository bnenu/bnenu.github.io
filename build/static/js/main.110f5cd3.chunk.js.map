{"version":3,"sources":["Main.elm","registerServiceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","F6","F7","g","F8","h","F9","i","A2","A3","A4","A5","A6","_JsArray_initialize","size","offset","func","result","Array","_JsArray_initializeFromList","max","ls","length","_Utils_Tuple2","_JsArray_foldr","index","array","value","acc","_List_Nil","from","to","slice","n","dest","source","destLen","itemsToCopy","$","_List_Cons","hd","tl","_List_cons","_List_fromArray","arr","out","_List_toArray","xs","push","_List_map2","ys","zs","ws","vs","sort","_Utils_cmp","ord","elm$core$Basics$EQ","elm$core$Basics$LT","tag","console","log","_Debug_crash","identifier","Error","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","key","elm$core$Dict$toList","_Utils_compare","elm$core$Basics$GT","_Utils_Tuple0","_Utils_Tuple3","_Utils_chr","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_ap","root","curr","_Scheduler_succeed","_Scheduler_binding","callback","_Scheduler_andThen","task","_Scheduler_onError","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_spawn","_Scheduler_rawSend","msg","_Scheduler_send","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","Math","pow","_Basics_modBy","modulus","answer","PI","E","cos","sin","tan","acos","asin","atan","atan2","_Basics_ceiling","ceil","_Basics_floor","floor","_Basics_log","round","sqrt","isNaN","_String_cons","chr","str","string","len","word","charCodeAt","join","isGood","char","state","_String_split","sep","split","_String_join","strs","_String_slice","start","end","_String_all","_String_contains","sub","indexOf","_String_indexes","lastIndexOf","subLen","is","_Json_decodePrim","decoder","_Json_decodeInt","_Json_expecting","elm$core$Result$Ok","isFinite","_Json_decodeString","_Json_wrap","String","_Json_decodeField","field","_Json_mapMany","decoders","_Json_map1","d1","_Json_map2","d2","_Json_run","d3","d4","d5","d6","d7","d8","_Json_runHelp","JSON","parse","elm$core$Result$Err","elm$json$Json$Decode$Failure","message","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","elm$core$Result$isOk","elm$json$Json$Decode$Field","elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","elm$core$List$reverse","errors","temp","elm$json$Json$Decode$OneOf","toElmValue","isArray","FileList","elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Json_encode","indentLevel","stringify","object","_Process_sleep","time","id","setTimeout","clearTimeout","impl","flagDecoder","debugMetadata","args","_Platform_initialize","aO","aY","aW","init","update","subscriptions","stepperBuilder","undefined","managers","model","stepper","sendToApp","ports","_Platform_effectManagers","manager","_Platform_instantiateManager","_Platform_setupEffects","viewMetadata","_Platform_dispatchEffects","_Platform_createManager","onEffects","onSelfMsg","cmdMap","subMap","info","router","loop","j","_Platform_sendToApp","_Platform_sendToSelf","_Platform_leaf","home","k","l","_Platform_batch","list","m","tagger","bag","o","cmdBag","subBag","effectsDict","_Platform_gatherEffects","isCmd","taggers","effect","q","p","_Platform_toEffect","newEffect","effects","_Platform_insert","finalTagger","_VirtualDom_divertHrefToApp","_Time_setInterval","interval","setInterval","clearInterval","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","virtualNode","node","parentNode","replaceChild","_VirtualDom_render","_VirtualDom_text","_VirtualDom_node","namespace","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_nodeNS","_VirtualDom_keyedNodeNS","_VirtualDom_thunk","refs","thunk","A7","A8","_VirtualDom_on","handler","_VirtualDom_property","_VirtualDom_attribute","attr","elm$virtual_dom$VirtualDom$toHandlerInt","elm$json$Json$Decode$map2","_VirtualDom_mapEventTuple","_VirtualDom_mapEventRecord","elm$json$Json$Decode$succeed","elm$json$Json$Decode$map","_VirtualDom_mapHandler","_VirtualDom_passiveSupported","tuple","record","r","_","Y","facts","entry","subFacts","_VirtualDom_addClass","newClass","classes","vNode","eventNode","createTextNode","subNode","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","window","Object","defineProperty","get","initialHandler","event","stopPropagation","currentEventNode","preventDefault","_VirtualDom_equalEvents","_VirtualDom_diff","patches","_VirtualDom_diffHelp","_VirtualDom_pushPatch","data","patch","s","t","u","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","xNext","yNext","xNextKey","xNextNode","oldMatch","yNextKey","yNextNode","newMatch","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","z","A","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","insert","_VirtualDom_applyPatchReorderEndInsertsHelp","_VirtualDom_applyPatchReorder","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","name","tagName","toLowerCase","_Browser_element","initialModel","view","a_","currNode","_Browser_makeAnimator","nextNode","_Browser_requestAnimationFrame","divertHrefToApp","K","title","bodyNode","body","doc","aE","aX","requestAnimationFrame","draw","updateIfNeeded","nextModel","isSync","elm$core$Task$perform","elm$core$Basics$never","history","go","url","pushState","replaceState","_Browser_fakeNode","_Browser_window","eventName","sendToSelf","elm$core$Maybe$Just","elm$core$Maybe$Nothing","_Browser_withNode","doStuff","getElementById","elm$browser$Browser$Dom$NotFound","functionName","scroll","_Browser_setViewportOf","scrollLeft","scrollTop","elm$core$Elm$JsArray$foldr","baseCase","_n0","tree","tail","helper","values","subTree","elm$core$List$cons","elm$core$Dict$foldr","left","right","$temp$func","$temp$acc","dict","elm$core$Task$andThen","elm$core$Basics$identity","elm$core$Task$succeed","elm$core$Task$init","elm$core$List$foldl","elm$core$List$foldrHelper","fn","ctr","r1","r2","r3","r4","elm$core$List$foldr","elm$core$List$map","elm$core$Task$map","taskA","elm$core$Task$map2","taskB","elm$core$Task$sequence","tasks","elm$core$Array$Array_elm_builtin","elm$core$Basics$ceiling","elm$core$Basics$logBase","base","number","elm$core$Array$shiftStep","elm$core$Elm$JsArray$empty","elm$core$Array$empty","elm$core$Elm$JsArray$initializeFromList","elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","elm$core$Basics$floor","elm$core$Basics$max","elm$core$Elm$JsArray$length","elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","elm$core$Elm$JsArray$initialize","elm$core$Array$initializeHelp","fromIndex","leaf","tailLen","elm$core$Char$toCode","code","elm$core$Char$isLower","_char","elm$core$Char$isUpper","elm$core$Char$isAlpha","elm$core$Char$isAlphaNum","elm$core$Char$isDigit","elm$core$List$length","elm$core$List$map2","elm$core$List$rangeHelp","lo","hi","$temp$lo","$temp$hi","$temp$list","elm$core$List$range","elm$core$List$indexedMap","elm$core$String$all","elm$core$String$fromInt","elm$core$String$join","chunks","elm$core$String$uncons","elm$core$String$split","elm$json$Json$Decode$indent","elm$json$Json$Encode$encode","elm$json$Json$Decode$errorOneOf","error","elm$json$Json$Decode$errorToString","elm$json$Json$Decode$errorToStringHelp","context","errorToStringHelp","err","isSimple","_n1","_n2","rest","$temp$error","$temp$context","indexName","introduction","json","elm$core$Platform$sendToApp","elm$core$Task$spawnCmd","elm$core$Task$onEffects","commands","elm$core$Task$onSelfMsg","elm$core$Task$cmdMap","millisToPosix","elm$core$Task$command","toMessage","elm$time$Time$Zone","elm$time$Time$millisToPosix","elm$time$Time$now","Date","now","elm$time$Time$posixToMillis","author$project$Main$getCurrentTime","author$project$Main$menu","author$project$Main$init","al","S","N","aa","author$project$Main$NextKey","elm$core$Basics$always","elm$core$Platform$Sub$batch","elm$core$Platform$Sub$none","elm$time$Time$Every","elm$core$Dict$RBEmpty_elm_builtin","elm$core$Dict$empty","elm$time$Time$State","processes","az","elm$time$Time$init","elm$core$Dict$RBNode_elm_builtin","elm$core$Basics$compare","elm$core$Dict$balance","color","lK","lV","_n6","llK","llV","llLeft","llRight","lRight","rK","rV","rLeft","rRight","lLeft","elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","elm$core$Dict$insert","elm$core$Dict$foldl","elm$core$Dict$merge","leftStep","bothStep","rightStep","leftDict","rightDict","initialResult","stepState","rKey","rValue","lKey","lValue","_n3","leftovers","intermediateResult","_n4","elm$core$Process$kill","elm$core$Dict$get","targetKey","elm$time$Time$addMySub","elm$core$Platform$sendToSelf","elm$core$Process$spawn","elm$time$Time$setInterval","elm$time$Time$spawnHelp","intervals","spawnTimer","elm$time$Time$onEffects","subs","_n7","spawns","existing","kills","_n5","newTaggers","spawnList","existingDict","killTask","newProcesses","elm$time$Time$onSelfMsg","elm$core$Basics$composeL","elm$time$Time$subMap","exports","elm$time$Time$subscription","elm$time$Time$every","author$project$Main$KeyDown","author$project$Main$experience","author$project$Main$extra","author$project$Main$projects","author$project$Main$summary","elm$core$Platform$Cmd$none","author$project$Main$handleCommand","cmd","text","_n2$11","author$project$Main$NoOp","elm$core$String$length","elm$core$String$slice","elm$core$String$dropLeft","elm$core$String$indexes","elm$core$String$isEmpty","elm$core$String$left","elm$core$String$contains","elm$core$String$toInt","total","code0","elm$url$Url$Url","protocol","host","port_","path","query","fragment","ag","ai","ao","aq","at","au","elm$url$Url$chompBeforePath","params","elm$url$Url$chompBeforeQuery","elm$url$Url$chompBeforeFragment","elm$browser$Browser$Dom$getViewportOf","aV","scrollWidth","aL","scrollHeight","aA","U","V","clientWidth","clientHeight","elm$browser$Browser$Dom$setViewportOf","elm$core$Task$onError","elm$core$Task$attempt","resultToMessage","elm$core$Maybe$withDefault","_default","maybe","elm$core$String$trim","trim","author$project$Main$parseInput","stdin","parsed","elm$core$List$head","elm$core$List$tail","elm$core$String$cons","elm$core$String$fromChar","elm$core$String$repeatHelp","chunk","elm$core$String$repeat","elm$core$String$padLeft","author$project$Main$int00","elm$time$Time$flooredDiv","numerator","denominator","elm$time$Time$toAdjustedMinutesHelp","defaultOffset","posixMinutes","eras","era","olderEras","Z","an","elm$time$Time$toAdjustedMinutes","elm$time$Time$toCivil","minutes","rawDay","dayOfEra","yearOfEra","dayOfYear","mp","month","ad","am","aB","elm$time$Time$toDay","zone","elm$time$Time$utc","elm$core$Basics$modBy","elm$time$Time$toHour","elm$time$Time$toMinute","elm$time$Time$toMonth","elm$time$Time$toSecond","elm$time$Time$toYear","author$project$Main$prettyTime","author$project$Main$timeToYear","author$project$Main$monthToInt","author$project$Main$timeToMonth","author$project$Main$timeToDay","author$project$Main$timeToHour","author$project$Main$timeToMinute","author$project$Main$timeToSecond","elm$core$Process$sleep","author$project$Main$update","author$project$Main$matchCommand","updatedModel","letter","reminder","author$project$Main$typer","status","container","pTime","author$project$Main$Stdin","elm$json$Json$Decode$field","elm$html$Html$Events$keyCode","elm$virtual_dom$VirtualDom$on","elm$html$Html$Events$on","elm$html$Html$div","elm$html$Html$p","elm$html$Html$text","elm$html$Html$input","elm$html$Html$span","elm$json$Json$Encode$bool","elm$html$Html$Attributes$autofocus","bool","elm$html$Html$Attributes$boolProperty","elm$json$Json$Encode$string","elm$html$Html$Attributes$stringProperty","elm$html$Html$Attributes$class","elm$html$Html$Attributes$id","elm$html$Html$Attributes$type_","elm$html$Html$Attributes$value","elm$html$Html$Events$alwaysStop","elm$html$Html$Events$stopPropagationOn","elm$json$Json$Decode$string","elm$html$Html$Events$targetValue","fields","author$project$Main$main","typing","lines","elm$html$Html$Events$onInput","Main","_Platform_mergeExportsProd","obj","this","isLocalhost","Boolean","registerValidSW","swUrl","navigator","registration","installingWorker","installing","controller","Elm","URL","process","location","publicUrl","origin","concat","fetch","response","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.110f5cd3.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.Z.H === region.ae.H)\n\t{\n\t\treturn 'on line ' + region.Z.H;\n\t}\n\treturn 'on lines ' + region.Z.H + ' through ' + region.ae.H;\n}\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = elm$core$Set$toList(x);\n\t\ty = elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (!x.$)\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800)\n\t\t\t+\n\t\t\tString.fromCharCode(code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? elm$core$Maybe$Nothing\n\t\t: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif (elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aO,\n\t\timpl.aY,\n\t\timpl.aW,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\telm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\telm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\nfunction _Time_now(millisToPosix)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(millisToPosix(Date.now())));\n\t});\n}\n\nvar _Time_setInterval = F2(function(interval, task)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);\n\t\treturn function() { clearInterval(id); };\n\t});\n});\n\nfunction _Time_here()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(\n\t\t\tA2(elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)\n\t\t));\n\t});\n}\n\n\nfunction _Time_getZoneName()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar name = elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tvar name = elm$time$Time$Offset(new Date().getTimezoneOffset());\n\t\t}\n\t\tcallback(_Scheduler_succeed(name));\n\t});\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2(elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3(elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\telm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tr: func(record.r),\n\t\t_: record._,\n\t\tY: record.Y\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t(key !== 'value' || key !== 'checked' || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\tvalue\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\tvalue\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.r;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value._;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.Y) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\tvar oldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tvar newMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aO,\n\t\timpl.aY,\n\t\timpl.aW,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.a_;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aO,\n\t\timpl.aY,\n\t\timpl.aW,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.K && impl.K(sendToApp)\n\t\t\tvar view = impl.a_;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.aE);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.aX) && (_VirtualDom_doc.title = title = doc.aX);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.aR;\n\tvar onUrlRequest = impl.aS;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tK: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.download)\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.at === next.at\n\t\t\t\t\t\t\t&& curr.ai === next.ai\n\t\t\t\t\t\t\t&& curr.aq.a === next.aq.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\taO: function(flags)\n\t\t{\n\t\t\treturn A3(impl.aO, flags, _Browser_getUrl(), key);\n\t\t},\n\t\ta_: impl.a_,\n\t\taY: impl.aY,\n\t\taW: impl.aW\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { aM: 'hidden', G: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { aM: 'mozHidden', G: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { aM: 'msHidden', G: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { aM: 'webkitHidden', G: 'webkitvisibilitychange' }\n\t\t: { aM: 'hidden', G: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\tcancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\taV: _Browser_getScene(),\n\t\taA: {\n\t\t\tU: _Browser_window.pageXOffset,\n\t\t\tV: _Browser_window.pageYOffset,\n\t\t\tE: _Browser_doc.documentElement.clientWidth,\n\t\t\taL: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\tE: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\taL: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\taV: {\n\t\t\t\tE: node.scrollWidth,\n\t\t\t\taL: node.scrollHeight\n\t\t\t},\n\t\t\taA: {\n\t\t\t\tU: node.scrollLeft,\n\t\t\t\tV: node.scrollTop,\n\t\t\t\tE: node.clientWidth,\n\t\t\t\taL: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\taV: _Browser_getScene(),\n\t\t\taA: {\n\t\t\t\tU: x,\n\t\t\t\tV: y,\n\t\t\t\tE: _Browser_doc.documentElement.clientWidth,\n\t\t\t\taL: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\taG: {\n\t\t\t\tU: x + rect.left,\n\t\t\t\tV: y + rect.top,\n\t\t\t\tE: rect.width,\n\t\t\t\taL: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\nvar author$project$Main$Next = 0;\nvar author$project$Main$beforePrompt = '~';\nvar author$project$Main$NewTime = function (a) {\n\treturn {$: 5, a: a};\n};\nvar elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar elm$core$Basics$EQ = 1;\nvar elm$core$Basics$LT = 0;\nvar elm$core$List$cons = _List_cons;\nvar elm$core$Array$toList = function (array) {\n\treturn A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);\n};\nvar elm$core$Basics$GT = 2;\nvar elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2(elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Set$toList = function (_n0) {\n\tvar dict = _n0;\n\treturn elm$core$Dict$keys(dict);\n};\nvar elm$core$Task$andThen = _Scheduler_andThen;\nvar elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar elm$core$Task$Perform = elm$core$Basics$identity;\nvar elm$core$Task$succeed = _Scheduler_succeed;\nvar elm$core$Task$init = elm$core$Task$succeed(0);\nvar elm$core$Basics$add = _Basics_add;\nvar elm$core$Basics$gt = _Utils_gt;\nvar elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$reverse = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);\n};\nvar elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4(elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\telm$core$List$foldr,\n\t\telm$core$Task$map2(elm$core$List$cons),\n\t\telm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar elm$core$Basics$False = 1;\nvar elm$core$Basics$True = 0;\nvar elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$core$Array$branchFactor = 32;\nvar elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar elm$core$Basics$ceiling = _Basics_ceiling;\nvar elm$core$Basics$fdiv = _Basics_fdiv;\nvar elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar elm$core$Basics$toFloat = _Basics_toFloat;\nvar elm$core$Array$shiftStep = elm$core$Basics$ceiling(\n\tA2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));\nvar elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);\nvar elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _n0.a;\n\t\t\tvar remainingNodes = _n0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$eq = _Utils_equal;\nvar elm$core$Tuple$first = function (_n0) {\n\tvar x = _n0.a;\n\treturn x;\n};\nvar elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$floor = _Basics_floor;\nvar elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar elm$core$Basics$mul = _Basics_mul;\nvar elm$core$Basics$sub = _Basics_sub;\nvar elm$core$Elm$JsArray$length = _JsArray_length;\nvar elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.b) {\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.d),\n\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.d);\n\t\t} else {\n\t\t\tvar treeLen = builder.b * elm$core$Array$branchFactor;\n\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\tA2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.e) : builder.e;\n\t\t\tvar tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.b);\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.d) + treeLen,\n\t\t\t\tA2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.d);\n\t\t}\n\t});\nvar elm$core$Basics$idiv = _Basics_idiv;\nvar elm$core$Basics$lt = _Utils_lt;\nvar elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{e: nodeList, b: (len / elm$core$Array$branchFactor) | 0, d: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = elm$core$Array$Leaf(\n\t\t\t\t\tA3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$le = _Utils_le;\nvar elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % elm$core$Array$branchFactor;\n\t\t\tvar tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;\n\t\t\treturn A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Maybe$Nothing = {$: 1};\nvar elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$core$Basics$and = _Basics_and;\nvar elm$core$Basics$append = _Utils_append;\nvar elm$core$Basics$or = _Basics_or;\nvar elm$core$Char$toCode = _Char_toCode;\nvar elm$core$Char$isLower = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar elm$core$Char$isUpper = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar elm$core$Char$isAlpha = function (_char) {\n\treturn elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);\n};\nvar elm$core$Char$isDigit = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar elm$core$Char$isAlphaNum = function (_char) {\n\treturn elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));\n};\nvar elm$core$List$length = function (xs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar elm$core$List$map2 = _List_map2;\nvar elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2(elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\telm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar elm$core$String$all = _String_all;\nvar elm$core$String$fromInt = _String_fromNumber;\nvar elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar elm$core$String$uncons = _String_uncons;\nvar elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\telm$core$String$join,\n\t\t'\\n    ',\n\t\tA2(elm$core$String$split, '\\n', str));\n};\nvar elm$json$Json$Encode$encode = _Json_encode;\nvar elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(\n\t\t\telm$json$Json$Decode$errorToString(error))));\n\t});\nvar elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _n1 = elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\t\t\t\tvar _char = _n2.a;\n\t\t\t\t\t\t\tvar rest = _n2.b;\n\t\t\t\t\t\t\treturn elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + (elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(\n\t\t\t\t\t\t\t\telm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\telm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + (elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2(elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar elm$core$Task$spawnCmd = F2(\n\tfunction (router, _n0) {\n\t\tvar task = _n0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar elm$core$Task$onSelfMsg = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\treturn elm$core$Task$succeed(0);\n\t});\nvar elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _n0) {\n\t\tvar task = _n0;\n\t\treturn A2(elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);\nvar elm$core$Task$command = _Platform_leaf('Task');\nvar elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn elm$core$Task$command(\n\t\t\tA2(elm$core$Task$map, toMessage, task));\n\t});\nvar elm$time$Time$Name = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$time$Time$Offset = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$time$Time$Zone = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$time$Time$customZone = elm$time$Time$Zone;\nvar elm$time$Time$Posix = elm$core$Basics$identity;\nvar elm$time$Time$millisToPosix = elm$core$Basics$identity;\nvar elm$time$Time$now = _Time_now(elm$time$Time$millisToPosix);\nvar elm$time$Time$posixToMillis = function (_n0) {\n\tvar millis = _n0;\n\treturn millis;\n};\nvar author$project$Main$getCurrentTime = A2(\n\telm$core$Task$perform,\n\tauthor$project$Main$NewTime,\n\tA2(\n\t\telm$core$Task$andThen,\n\t\tfunction (t) {\n\t\t\treturn elm$core$Task$succeed(\n\t\t\t\telm$time$Time$posixToMillis(t));\n\t\t},\n\t\telm$time$Time$now));\nvar author$project$Main$menu = '\\n    Type one of the following commands at the prompt\\n    ------------------------------------------------\\n    help    - display the main commands menu\\n    about   - display info about me\\n    contact - display my contact data\\n    extra   - display additional options\\n    ';\nvar author$project$Main$promptSymbol = ' $ ';\nvar author$project$Main$init = _Utils_Tuple2(\n\t{\n\t\ta: '',\n\t\tal: author$project$Main$menu,\n\t\tS: _Utils_ap(author$project$Main$beforePrompt, author$project$Main$promptSymbol),\n\t\tt: '',\n\t\tN: _Utils_Tuple2(\n\t\t\t0,\n\t\t\t_Utils_Tuple2('', 'help')),\n\t\taa: 0.15 * 1000\n\t},\n\tauthor$project$Main$getCurrentTime);\nvar author$project$Main$NextKey = {$: 3};\nvar elm$core$Basics$always = F2(\n\tfunction (a, _n0) {\n\t\treturn a;\n\t});\nvar elm$core$Platform$Sub$batch = _Platform_batch;\nvar elm$core$Platform$Sub$none = elm$core$Platform$Sub$batch(_List_Nil);\nvar elm$core$Tuple$second = function (_n0) {\n\tvar y = _n0.b;\n\treturn y;\n};\nvar elm$time$Time$Every = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar elm$core$Dict$empty = elm$core$Dict$RBEmpty_elm_builtin;\nvar elm$time$Time$State = F2(\n\tfunction (taggers, processes) {\n\t\treturn {as: processes, az: taggers};\n\t});\nvar elm$time$Time$init = elm$core$Task$succeed(\n\tA2(elm$time$Time$State, elm$core$Dict$empty, elm$core$Dict$empty));\nvar elm$core$Dict$Black = 1;\nvar elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar elm$core$Basics$compare = _Utils_compare;\nvar elm$core$Dict$Red = 0;\nvar elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _n1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _n3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _n5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _n6 = left.d;\n\t\t\t\tvar _n7 = _n6.a;\n\t\t\t\tvar llK = _n6.b;\n\t\t\t\tvar llV = _n6.c;\n\t\t\t\tvar llLeft = _n6.d;\n\t\t\t\tvar llRight = _n6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, elm$core$Dict$RBEmpty_elm_builtin, elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _n1 = A2(elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_n1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _n0 = A3(elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_n0.$ === -1) && (!_n0.a)) {\n\t\t\tvar _n1 = _n0.a;\n\t\t\tvar k = _n0.b;\n\t\t\tvar v = _n0.c;\n\t\t\tvar l = _n0.d;\n\t\t\tvar r = _n0.e;\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _n0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar elm$core$Dict$foldl = F3(\n\tfunction (func, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldl, func, acc, left)),\n\t\t\t\t\t$temp$dict = right;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _n0) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar list = _n0.a;\n\t\t\t\t\tvar result = _n0.b;\n\t\t\t\t\tif (!list.b) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n2 = list.a;\n\t\t\t\t\t\tvar lKey = _n2.a;\n\t\t\t\t\t\tvar lValue = _n2.b;\n\t\t\t\t\t\tvar rest = list.b;\n\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) < 0) {\n\t\t\t\t\t\t\tvar $temp$rKey = rKey,\n\t\t\t\t\t\t\t\t$temp$rValue = rValue,\n\t\t\t\t\t\t\t\t$temp$_n0 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\tA3(leftStep, lKey, lValue, result));\n\t\t\t\t\t\t\trKey = $temp$rKey;\n\t\t\t\t\t\t\trValue = $temp$rValue;\n\t\t\t\t\t\t\t_n0 = $temp$_n0;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\t\tA4(bothStep, lKey, lValue, rValue, result));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _n3 = A3(\n\t\t\telm$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t_Utils_Tuple2(\n\t\t\t\telm$core$Dict$toList(leftDict),\n\t\t\t\tinitialResult),\n\t\t\trightDict);\n\t\tvar leftovers = _n3.a;\n\t\tvar intermediateResult = _n3.b;\n\t\treturn A3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n4, result) {\n\t\t\t\t\tvar k = _n4.a;\n\t\t\t\t\tvar v = _n4.b;\n\t\t\t\t\treturn A3(leftStep, k, v, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar elm$core$Process$kill = _Scheduler_kill;\nvar elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _n1 = A2(elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_n1) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$time$Time$addMySub = F2(\n\tfunction (_n0, state) {\n\t\tvar interval = _n0.a;\n\t\tvar tagger = _n0.b;\n\t\tvar _n1 = A2(elm$core$Dict$get, interval, state);\n\t\tif (_n1.$ === 1) {\n\t\t\treturn A3(\n\t\t\t\telm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[tagger]),\n\t\t\t\tstate);\n\t\t} else {\n\t\t\tvar taggers = _n1.a;\n\t\t\treturn A3(\n\t\t\t\telm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\tA2(elm$core$List$cons, tagger, taggers),\n\t\t\t\tstate);\n\t\t}\n\t});\nvar elm$core$Platform$sendToSelf = _Platform_sendToSelf;\nvar elm$core$Process$spawn = _Scheduler_spawn;\nvar elm$time$Time$setInterval = _Time_setInterval;\nvar elm$time$Time$spawnHelp = F3(\n\tfunction (router, intervals, processes) {\n\t\tif (!intervals.b) {\n\t\t\treturn elm$core$Task$succeed(processes);\n\t\t} else {\n\t\t\tvar interval = intervals.a;\n\t\t\tvar rest = intervals.b;\n\t\t\tvar spawnTimer = elm$core$Process$spawn(\n\t\t\t\tA2(\n\t\t\t\t\telm$time$Time$setInterval,\n\t\t\t\t\tinterval,\n\t\t\t\t\tA2(elm$core$Platform$sendToSelf, router, interval)));\n\t\t\tvar spawnRest = function (id) {\n\t\t\t\treturn A3(\n\t\t\t\t\telm$time$Time$spawnHelp,\n\t\t\t\t\trouter,\n\t\t\t\t\trest,\n\t\t\t\t\tA3(elm$core$Dict$insert, interval, id, processes));\n\t\t\t};\n\t\t\treturn A2(elm$core$Task$andThen, spawnRest, spawnTimer);\n\t\t}\n\t});\nvar elm$time$Time$onEffects = F3(\n\tfunction (router, subs, _n0) {\n\t\tvar processes = _n0.as;\n\t\tvar rightStep = F3(\n\t\t\tfunction (_n6, id, _n7) {\n\t\t\t\tvar spawns = _n7.a;\n\t\t\t\tvar existing = _n7.b;\n\t\t\t\tvar kills = _n7.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\texisting,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\t\tfunction (_n5) {\n\t\t\t\t\t\t\treturn kills;\n\t\t\t\t\t\t},\n\t\t\t\t\t\telm$core$Process$kill(id)));\n\t\t\t});\n\t\tvar newTaggers = A3(elm$core$List$foldl, elm$time$Time$addMySub, elm$core$Dict$empty, subs);\n\t\tvar leftStep = F3(\n\t\t\tfunction (interval, taggers, _n4) {\n\t\t\t\tvar spawns = _n4.a;\n\t\t\t\tvar existing = _n4.b;\n\t\t\t\tvar kills = _n4.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2(elm$core$List$cons, interval, spawns),\n\t\t\t\t\texisting,\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar bothStep = F4(\n\t\t\tfunction (interval, taggers, id, _n3) {\n\t\t\t\tvar spawns = _n3.a;\n\t\t\t\tvar existing = _n3.b;\n\t\t\t\tvar kills = _n3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\tA3(elm$core$Dict$insert, interval, id, existing),\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar _n1 = A6(\n\t\t\telm$core$Dict$merge,\n\t\t\tleftStep,\n\t\t\tbothStep,\n\t\t\trightStep,\n\t\t\tnewTaggers,\n\t\t\tprocesses,\n\t\t\t_Utils_Tuple3(\n\t\t\t\t_List_Nil,\n\t\t\t\telm$core$Dict$empty,\n\t\t\t\telm$core$Task$succeed(0)));\n\t\tvar spawnList = _n1.a;\n\t\tvar existingDict = _n1.b;\n\t\tvar killTask = _n1.c;\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (newProcesses) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tA2(elm$time$Time$State, newTaggers, newProcesses));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n2) {\n\t\t\t\t\treturn A3(elm$time$Time$spawnHelp, router, spawnList, existingDict);\n\t\t\t\t},\n\t\t\t\tkillTask));\n\t});\nvar elm$time$Time$onSelfMsg = F3(\n\tfunction (router, interval, state) {\n\t\tvar _n0 = A2(elm$core$Dict$get, interval, state.az);\n\t\tif (_n0.$ === 1) {\n\t\t\treturn elm$core$Task$succeed(state);\n\t\t} else {\n\t\t\tvar taggers = _n0.a;\n\t\t\tvar tellTaggers = function (time) {\n\t\t\t\treturn elm$core$Task$sequence(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tfunction (tagger) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$Platform$sendToApp,\n\t\t\t\t\t\t\t\trouter,\n\t\t\t\t\t\t\t\ttagger(time));\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttaggers));\n\t\t\t};\n\t\t\treturn A2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n1) {\n\t\t\t\t\treturn elm$core$Task$succeed(state);\n\t\t\t\t},\n\t\t\t\tA2(elm$core$Task$andThen, tellTaggers, elm$time$Time$now));\n\t\t}\n\t});\nvar elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar elm$time$Time$subMap = F2(\n\tfunction (f, _n0) {\n\t\tvar interval = _n0.a;\n\t\tvar tagger = _n0.b;\n\t\treturn A2(\n\t\t\telm$time$Time$Every,\n\t\t\tinterval,\n\t\t\tA2(elm$core$Basics$composeL, f, tagger));\n\t});\n_Platform_effectManagers['Time'] = _Platform_createManager(elm$time$Time$init, elm$time$Time$onEffects, elm$time$Time$onSelfMsg, 0, elm$time$Time$subMap);\nvar elm$time$Time$subscription = _Platform_leaf('Time');\nvar elm$time$Time$every = F2(\n\tfunction (interval, tagger) {\n\t\treturn elm$time$Time$subscription(\n\t\t\tA2(elm$time$Time$Every, interval, tagger));\n\t});\nvar author$project$Main$subscriptions = function (model) {\n\tvar p = model.N.b.b;\n\tvar typing = (p === '') ? elm$core$Platform$Sub$none : A2(\n\t\telm$time$Time$every,\n\t\tmodel.aa,\n\t\telm$core$Basics$always(author$project$Main$NextKey));\n\treturn elm$core$Platform$Sub$batch(\n\t\t_List_fromArray(\n\t\t\t[typing]));\n};\nvar author$project$Main$KeyDown = function (a) {\n\treturn {$: 1, a: a};\n};\nvar author$project$Main$ScrollToBottom = function (a) {\n\treturn {$: 4, a: a};\n};\nvar author$project$Main$contact = '\\n    hello_at_bogdannenu.com\\n    ';\nvar author$project$Main$experience = '\\n    ---------------------\\n    Some of my jobs\\n    ---------------------\\n    2017 - 2019 Full stack web developer - Aenvira Solutions, Bucharest\\n    2009 - 2017 IT Project Lead - OMV Petrom Global Solutions, Bucharest/Vienna\\n    2005 - 2009 Project/Team Lead, Software Integration - Crescendo International, Bucharest\\n    2004 - 2005 Software developer/ IT Consultant - Media Network International, Bucharest\\n    ';\nvar author$project$Main$extra = '\\n    cat [option] - about me with options :).\\n        Options:\\n            -s - brief summary\\n            -e - my work experience\\n            -p - some of my projects\\n    clear        - clears the screen and returns the prompt\\n    menu [option], help [option] -commands menu with options\\n        Options:\\n            -a - all commands options\\n    whatisthis   - info about this app\\n    ';\nvar author$project$Main$pageInfo = '\\n    This app is an experiment to build an interactive terminal experience with Elm 0.19.\\n    ';\nvar author$project$Main$projects = '\\n    --------------------\\n    Some projects\\n    --------------------\\n    Barenode - Functional, dependecy-less web server in NodeJS build with ADTs.\\n    ExoJS    - A functional reactive state management experiment inspired by Redux. It is based on RxJS subjects and tagged unions for data types.\\n    ';\nvar author$project$Main$summary = '\\n    -----------------\\n    I am Bogdan\\n    -----------------\\n    A full stack web developer working with Elixir, Javascript and Elm. I love the web, I love functional programming and I love hiking and trailrunning.\\n    ';\nvar elm$core$Platform$Cmd$batch = _Platform_batch;\nvar elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);\nvar author$project$Main$handleCommand = F3(\n\tfunction (model, args, cmd) {\n\t\tswitch (cmd) {\n\t\t\tcase 7:\n\t\t\t\tvar nl = model.a + ('\\n' + 'command not found');\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{a: nl}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 8:\n\t\t\t\treturn _Utils_Tuple2(model, elm$core$Platform$Cmd$none);\n\t\t\tcase 0:\n\t\t\t\tvar m = function () {\n\t\t\t\t\tif (args.b) {\n\t\t\t\t\t\tif ((args.a === '-a') && (!args.b.b)) {\n\t\t\t\t\t\t\treturn author$project$Main$menu + ('\\n' + author$project$Main$extra);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'unknown arguments';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn author$project$Main$menu;\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\tvar nl = model.a + ('\\n' + m);\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{a: nl}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 3:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{a: ''}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 1:\n\t\t\t\tvar text = function () {\n\t\t\t\t\t_n2$11:\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tif (!args.b) {\n\t\t\t\t\t\t\treturn author$project$Main$summary + ('\\n' + author$project$Main$projects);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (!args.b.b) {\n\t\t\t\t\t\t\t\tswitch (args.a) {\n\t\t\t\t\t\t\t\t\tcase '-s':\n\t\t\t\t\t\t\t\t\t\treturn author$project$Main$summary;\n\t\t\t\t\t\t\t\t\tcase '-e':\n\t\t\t\t\t\t\t\t\t\treturn author$project$Main$experience;\n\t\t\t\t\t\t\t\t\tcase '-p':\n\t\t\t\t\t\t\t\t\t\treturn author$project$Main$projects;\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tbreak _n2$11;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (!args.b.b.b) {\n\t\t\t\t\t\t\t\t\tswitch (args.a) {\n\t\t\t\t\t\t\t\t\t\tcase '-e':\n\t\t\t\t\t\t\t\t\t\t\tswitch (args.b.a) {\n\t\t\t\t\t\t\t\t\t\t\t\tcase '-s':\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar _n4 = args.b;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn author$project$Main$experience + ('\\n' + author$project$Main$summary);\n\t\t\t\t\t\t\t\t\t\t\t\tcase '-p':\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar _n5 = args.b;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn author$project$Main$experience + ('\\n' + author$project$Main$projects);\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _n2$11;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcase '-p':\n\t\t\t\t\t\t\t\t\t\t\tswitch (args.b.a) {\n\t\t\t\t\t\t\t\t\t\t\t\tcase '-e':\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar _n6 = args.b;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn author$project$Main$projects + ('\\n' + author$project$Main$experience);\n\t\t\t\t\t\t\t\t\t\t\t\tcase '-s':\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar _n7 = args.b;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn author$project$Main$projects + ('\\n' + author$project$Main$summary);\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _n2$11;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcase '-s':\n\t\t\t\t\t\t\t\t\t\t\tswitch (args.b.a) {\n\t\t\t\t\t\t\t\t\t\t\t\tcase '-e':\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar _n3 = args.b;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn author$project$Main$summary + ('\\n' + author$project$Main$experience);\n\t\t\t\t\t\t\t\t\t\t\t\tcase '-p':\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar _n8 = args.b;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn author$project$Main$summary + ('\\n' + author$project$Main$projects);\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _n2$11;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tbreak _n2$11;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif ((((args.a === '-s') && (args.b.a === '-e')) && (args.b.b.a === '-p')) && (!args.b.b.b.b)) {\n\t\t\t\t\t\t\t\t\t\tvar _n9 = args.b;\n\t\t\t\t\t\t\t\t\t\tvar _n10 = _n9.b;\n\t\t\t\t\t\t\t\t\t\treturn author$project$Main$summary + ('\\n' + (author$project$Main$experience + ('\\n' + author$project$Main$projects)));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _n2$11;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn 'unknown arguments';\n\t\t\t\t}();\n\t\t\t\tvar nl = model.a + ('\\n' + text);\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{a: nl}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 2:\n\t\t\t\tvar nl = model.a + ('\\n' + author$project$Main$contact);\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{a: nl}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 4:\n\t\t\t\tvar nl = model.a + ('\\n' + author$project$Main$extra);\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{a: nl}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 5:\n\t\t\t\tvar nl = model.a + ('\\n' + author$project$Main$pageInfo);\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{a: nl}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tdefault:\n\t\t\t\treturn _Utils_Tuple2(model, author$project$Main$getCurrentTime);\n\t\t}\n\t});\nvar author$project$Main$NoOp = {$: 0};\nvar elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$browser$Browser$Dom$NotFound = elm$core$Basics$identity;\nvar elm$core$Basics$never = function (_n0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _n0;\n\t\tvar $temp$_n0 = nvr;\n\t\t_n0 = $temp$_n0;\n\t\tcontinue never;\n\t}\n};\nvar elm$json$Json$Decode$map = _Json_map1;\nvar elm$json$Json$Decode$map2 = _Json_map2;\nvar elm$json$Json$Decode$succeed = _Json_succeed;\nvar elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar elm$core$String$length = _String_length;\nvar elm$core$String$slice = _String_slice;\nvar elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\telm$core$String$slice,\n\t\t\tn,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar elm$core$String$startsWith = _String_startsWith;\nvar elm$url$Url$Http = 0;\nvar elm$url$Url$Https = 1;\nvar elm$core$String$indexes = _String_indexes;\nvar elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);\n\t});\nvar elm$core$String$contains = _String_contains;\nvar elm$core$String$toInt = _String_toInt;\nvar elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {ag: fragment, ai: host, ao: path, aq: port_, at: protocol, au: query};\n\t});\nvar elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, ':', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\tvar _n1 = elm$core$String$toInt(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _n1;\n\t\t\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\telm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2(elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '/', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2(elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '?', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\telm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '#', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$fromString = function (str) {\n\treturn A2(elm$core$String$startsWith, 'http://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);\n};\nvar elm$browser$Browser$Dom$getViewportOf = _Browser_getViewportOf;\nvar elm$browser$Browser$Dom$setViewportOf = _Browser_setViewportOf;\nvar elm$core$Task$onError = _Scheduler_onError;\nvar elm$core$Task$attempt = F2(\n\tfunction (resultToMessage, task) {\n\t\treturn elm$core$Task$command(\n\t\t\tA2(\n\t\t\t\telm$core$Task$onError,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Basics$composeL,\n\t\t\t\t\tA2(elm$core$Basics$composeL, elm$core$Task$succeed, resultToMessage),\n\t\t\t\t\telm$core$Result$Err),\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Basics$composeL,\n\t\t\t\t\t\tA2(elm$core$Basics$composeL, elm$core$Task$succeed, resultToMessage),\n\t\t\t\t\t\telm$core$Result$Ok),\n\t\t\t\t\ttask)));\n\t});\nvar author$project$Main$jumpToBottom = function (id) {\n\treturn A2(\n\t\telm$core$Task$attempt,\n\t\tfunction (_n0) {\n\t\t\treturn author$project$Main$NoOp;\n\t\t},\n\t\tA2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (info) {\n\t\t\t\treturn A3(elm$browser$Browser$Dom$setViewportOf, id, 0, info.aV.aL);\n\t\t\t},\n\t\t\telm$browser$Browser$Dom$getViewportOf(id)));\n};\nvar author$project$Main$Cat = 1;\nvar author$project$Main$Clear = 3;\nvar author$project$Main$Contact = 2;\nvar author$project$Main$Empty = 8;\nvar author$project$Main$Extra = 4;\nvar author$project$Main$Menu = 0;\nvar author$project$Main$ShowTime = 6;\nvar author$project$Main$Whatisthis = 5;\nvar author$project$Main$matchCommand = function (s) {\n\tswitch (s) {\n\t\tcase 'cat':\n\t\t\treturn 1;\n\t\tcase 'about':\n\t\t\treturn 1;\n\t\tcase 'contact':\n\t\t\treturn 2;\n\t\tcase 'help':\n\t\t\treturn 0;\n\t\tcase 'menu':\n\t\t\treturn 0;\n\t\tcase 'clear':\n\t\t\treturn 3;\n\t\tcase 'extra':\n\t\t\treturn 4;\n\t\tcase 'whatisthis':\n\t\t\treturn 5;\n\t\tcase 'time':\n\t\t\treturn 6;\n\t\tcase '':\n\t\t\treturn 8;\n\t\tdefault:\n\t\t\treturn 0;\n\t}\n};\nvar elm$core$List$head = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn elm$core$Maybe$Just(x);\n\t} else {\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar elm$core$List$tail = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn elm$core$Maybe$Just(xs);\n\t} else {\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar elm$core$Maybe$withDefault = F2(\n\tfunction (_default, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn _default;\n\t\t}\n\t});\nvar elm$core$String$trim = _String_trim;\nvar author$project$Main$parseInput = function (stdin) {\n\tvar parsed = A2(\n\t\telm$core$String$split,\n\t\t' ',\n\t\telm$core$String$trim(stdin));\n\tvar cmd = A2(\n\t\telm$core$Maybe$withDefault,\n\t\t'',\n\t\telm$core$List$head(parsed));\n\tvar args = A2(\n\t\telm$core$Maybe$withDefault,\n\t\t_List_Nil,\n\t\telm$core$List$tail(parsed));\n\treturn _Utils_Tuple2(cmd, args);\n};\nvar elm$core$String$cons = _String_cons;\nvar elm$core$String$fromChar = function (_char) {\n\treturn A2(elm$core$String$cons, _char, '');\n};\nvar elm$core$Bitwise$and = _Bitwise_and;\nvar elm$core$Bitwise$shiftRightBy = _Bitwise_shiftRightBy;\nvar elm$core$String$repeatHelp = F3(\n\tfunction (n, chunk, result) {\n\t\treturn (n <= 0) ? result : A3(\n\t\t\telm$core$String$repeatHelp,\n\t\t\tn >> 1,\n\t\t\t_Utils_ap(chunk, chunk),\n\t\t\t(!(n & 1)) ? result : _Utils_ap(result, chunk));\n\t});\nvar elm$core$String$repeat = F2(\n\tfunction (n, chunk) {\n\t\treturn A3(elm$core$String$repeatHelp, n, chunk, '');\n\t});\nvar elm$core$String$padLeft = F3(\n\tfunction (n, _char, string) {\n\t\treturn _Utils_ap(\n\t\t\tA2(\n\t\t\t\telm$core$String$repeat,\n\t\t\t\tn - elm$core$String$length(string),\n\t\t\t\telm$core$String$fromChar(_char)),\n\t\t\tstring);\n\t});\nvar author$project$Main$int00 = function (i) {\n\treturn A3(\n\t\telm$core$String$padLeft,\n\t\t2,\n\t\t'0',\n\t\telm$core$String$fromInt(i));\n};\nvar elm$time$Time$flooredDiv = F2(\n\tfunction (numerator, denominator) {\n\t\treturn elm$core$Basics$floor(numerator / denominator);\n\t});\nvar elm$time$Time$toAdjustedMinutesHelp = F3(\n\tfunction (defaultOffset, posixMinutes, eras) {\n\t\ttoAdjustedMinutesHelp:\n\t\twhile (true) {\n\t\t\tif (!eras.b) {\n\t\t\t\treturn posixMinutes + defaultOffset;\n\t\t\t} else {\n\t\t\t\tvar era = eras.a;\n\t\t\t\tvar olderEras = eras.b;\n\t\t\t\tif (_Utils_cmp(era.Z, posixMinutes) < 0) {\n\t\t\t\t\treturn posixMinutes + era.an;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$defaultOffset = defaultOffset,\n\t\t\t\t\t\t$temp$posixMinutes = posixMinutes,\n\t\t\t\t\t\t$temp$eras = olderEras;\n\t\t\t\t\tdefaultOffset = $temp$defaultOffset;\n\t\t\t\t\tposixMinutes = $temp$posixMinutes;\n\t\t\t\t\teras = $temp$eras;\n\t\t\t\t\tcontinue toAdjustedMinutesHelp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$time$Time$toAdjustedMinutes = F2(\n\tfunction (_n0, time) {\n\t\tvar defaultOffset = _n0.a;\n\t\tvar eras = _n0.b;\n\t\treturn A3(\n\t\t\telm$time$Time$toAdjustedMinutesHelp,\n\t\t\tdefaultOffset,\n\t\t\tA2(\n\t\t\t\telm$time$Time$flooredDiv,\n\t\t\t\telm$time$Time$posixToMillis(time),\n\t\t\t\t60000),\n\t\t\teras);\n\t});\nvar elm$core$Basics$ge = _Utils_ge;\nvar elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar elm$time$Time$toCivil = function (minutes) {\n\tvar rawDay = A2(elm$time$Time$flooredDiv, minutes, 60 * 24) + 719468;\n\tvar era = (((rawDay >= 0) ? rawDay : (rawDay - 146096)) / 146097) | 0;\n\tvar dayOfEra = rawDay - (era * 146097);\n\tvar yearOfEra = ((((dayOfEra - ((dayOfEra / 1460) | 0)) + ((dayOfEra / 36524) | 0)) - ((dayOfEra / 146096) | 0)) / 365) | 0;\n\tvar dayOfYear = dayOfEra - (((365 * yearOfEra) + ((yearOfEra / 4) | 0)) - ((yearOfEra / 100) | 0));\n\tvar mp = (((5 * dayOfYear) + 2) / 153) | 0;\n\tvar month = mp + ((mp < 10) ? 3 : (-9));\n\tvar year = yearOfEra + (era * 400);\n\treturn {\n\t\tad: (dayOfYear - ((((153 * mp) + 2) / 5) | 0)) + 1,\n\t\tam: month,\n\t\taB: year + ((month <= 2) ? 1 : 0)\n\t};\n};\nvar elm$time$Time$toDay = F2(\n\tfunction (zone, time) {\n\t\treturn elm$time$Time$toCivil(\n\t\t\tA2(elm$time$Time$toAdjustedMinutes, zone, time)).ad;\n\t});\nvar elm$time$Time$utc = A2(elm$time$Time$Zone, 0, _List_Nil);\nvar author$project$Main$timeToDay = function (time) {\n\treturn A2(\n\t\telm$time$Time$toDay,\n\t\telm$time$Time$utc,\n\t\telm$time$Time$millisToPosix(time));\n};\nvar elm$core$Basics$modBy = _Basics_modBy;\nvar elm$time$Time$toHour = F2(\n\tfunction (zone, time) {\n\t\treturn A2(\n\t\t\telm$core$Basics$modBy,\n\t\t\t24,\n\t\t\tA2(\n\t\t\t\telm$time$Time$flooredDiv,\n\t\t\t\tA2(elm$time$Time$toAdjustedMinutes, zone, time),\n\t\t\t\t60));\n\t});\nvar author$project$Main$timeToHour = function (time) {\n\treturn A2(\n\t\telm$time$Time$toHour,\n\t\telm$time$Time$utc,\n\t\telm$time$Time$millisToPosix(time));\n};\nvar elm$time$Time$toMinute = F2(\n\tfunction (zone, time) {\n\t\treturn A2(\n\t\t\telm$core$Basics$modBy,\n\t\t\t60,\n\t\t\tA2(elm$time$Time$toAdjustedMinutes, zone, time));\n\t});\nvar author$project$Main$timeToMinute = function (time) {\n\treturn A2(\n\t\telm$time$Time$toMinute,\n\t\telm$time$Time$utc,\n\t\telm$time$Time$millisToPosix(time));\n};\nvar author$project$Main$monthToInt = function (month) {\n\tswitch (month) {\n\t\tcase 0:\n\t\t\treturn 1;\n\t\tcase 1:\n\t\t\treturn 2;\n\t\tcase 2:\n\t\t\treturn 3;\n\t\tcase 3:\n\t\t\treturn 4;\n\t\tcase 4:\n\t\t\treturn 5;\n\t\tcase 5:\n\t\t\treturn 6;\n\t\tcase 6:\n\t\t\treturn 7;\n\t\tcase 7:\n\t\t\treturn 8;\n\t\tcase 8:\n\t\t\treturn 9;\n\t\tcase 9:\n\t\t\treturn 10;\n\t\tcase 10:\n\t\t\treturn 11;\n\t\tdefault:\n\t\t\treturn 12;\n\t}\n};\nvar elm$time$Time$Apr = 3;\nvar elm$time$Time$Aug = 7;\nvar elm$time$Time$Dec = 11;\nvar elm$time$Time$Feb = 1;\nvar elm$time$Time$Jan = 0;\nvar elm$time$Time$Jul = 6;\nvar elm$time$Time$Jun = 5;\nvar elm$time$Time$Mar = 2;\nvar elm$time$Time$May = 4;\nvar elm$time$Time$Nov = 10;\nvar elm$time$Time$Oct = 9;\nvar elm$time$Time$Sep = 8;\nvar elm$time$Time$toMonth = F2(\n\tfunction (zone, time) {\n\t\tvar _n0 = elm$time$Time$toCivil(\n\t\t\tA2(elm$time$Time$toAdjustedMinutes, zone, time)).am;\n\t\tswitch (_n0) {\n\t\t\tcase 1:\n\t\t\t\treturn 0;\n\t\t\tcase 2:\n\t\t\t\treturn 1;\n\t\t\tcase 3:\n\t\t\t\treturn 2;\n\t\t\tcase 4:\n\t\t\t\treturn 3;\n\t\t\tcase 5:\n\t\t\t\treturn 4;\n\t\t\tcase 6:\n\t\t\t\treturn 5;\n\t\t\tcase 7:\n\t\t\t\treturn 6;\n\t\t\tcase 8:\n\t\t\t\treturn 7;\n\t\t\tcase 9:\n\t\t\t\treturn 8;\n\t\t\tcase 10:\n\t\t\t\treturn 9;\n\t\t\tcase 11:\n\t\t\t\treturn 10;\n\t\t\tdefault:\n\t\t\t\treturn 11;\n\t\t}\n\t});\nvar author$project$Main$timeToMonth = function (time) {\n\treturn author$project$Main$monthToInt(\n\t\tA2(\n\t\t\telm$time$Time$toMonth,\n\t\t\telm$time$Time$utc,\n\t\t\telm$time$Time$millisToPosix(time)));\n};\nvar elm$time$Time$toSecond = F2(\n\tfunction (_n0, time) {\n\t\treturn A2(\n\t\t\telm$core$Basics$modBy,\n\t\t\t60,\n\t\t\tA2(\n\t\t\t\telm$time$Time$flooredDiv,\n\t\t\t\telm$time$Time$posixToMillis(time),\n\t\t\t\t1000));\n\t});\nvar author$project$Main$timeToSecond = function (time) {\n\treturn A2(\n\t\telm$time$Time$toSecond,\n\t\telm$time$Time$utc,\n\t\telm$time$Time$millisToPosix(time));\n};\nvar elm$time$Time$toYear = F2(\n\tfunction (zone, time) {\n\t\treturn elm$time$Time$toCivil(\n\t\t\tA2(elm$time$Time$toAdjustedMinutes, zone, time)).aB;\n\t});\nvar author$project$Main$timeToYear = function (time) {\n\treturn A2(\n\t\telm$time$Time$toYear,\n\t\telm$time$Time$utc,\n\t\telm$time$Time$millisToPosix(time));\n};\nvar author$project$Main$prettyTime = function (time) {\n\treturn elm$core$String$fromInt(\n\t\tauthor$project$Main$timeToYear(time)) + (' ' + (author$project$Main$int00(\n\t\tauthor$project$Main$timeToMonth(time)) + (' ' + (author$project$Main$int00(\n\t\tauthor$project$Main$timeToDay(time)) + (' ' + (author$project$Main$int00(\n\t\tauthor$project$Main$timeToHour(time)) + (':' + (author$project$Main$int00(\n\t\tauthor$project$Main$timeToMinute(time)) + (':' + author$project$Main$int00(\n\t\tauthor$project$Main$timeToSecond(time)))))))))));\n};\nvar author$project$Main$Done = 1;\nvar author$project$Main$typer = function (t) {\n\tvar status = t.a;\n\tvar state = t.b;\n\tvar x = elm$core$String$uncons(state.b);\n\tvar acc = state.a;\n\tvar newState = function () {\n\t\tif (!x.$) {\n\t\t\tvar _n1 = x.a;\n\t\t\tvar letter = _n1.a;\n\t\t\tvar reminder = _n1.b;\n\t\t\tif (reminder === '') {\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t1,\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$String$fromChar(letter)),\n\t\t\t\t\t\treminder));\n\t\t\t} else {\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t0,\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$String$fromChar(letter)),\n\t\t\t\t\t\treminder));\n\t\t\t}\n\t\t} else {\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t1,\n\t\t\t\t_Utils_Tuple2(acc, ''));\n\t\t}\n\t}();\n\treturn newState;\n};\nvar elm$core$Process$sleep = _Process_sleep;\nvar author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 0:\n\t\t\t\treturn _Utils_Tuple2(model, elm$core$Platform$Cmd$none);\n\t\t\tcase 2:\n\t\t\t\tvar value = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{t: value}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 1:\n\t\t\t\tvar key = msg.a;\n\t\t\t\tif (key === 13) {\n\t\t\t\t\tvar nl = model.a + ('\\n' + (model.S + model.t));\n\t\t\t\t\tvar m = _Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{a: nl, t: ''});\n\t\t\t\t\tvar _n1 = author$project$Main$parseInput(model.t);\n\t\t\t\t\tvar cmd = _n1.a;\n\t\t\t\t\tvar args = _n1.b;\n\t\t\t\t\tvar _n2 = A3(\n\t\t\t\t\t\tauthor$project$Main$handleCommand,\n\t\t\t\t\t\tm,\n\t\t\t\t\t\targs,\n\t\t\t\t\t\tauthor$project$Main$matchCommand(cmd));\n\t\t\t\t\tvar updatedModel = _n2.a;\n\t\t\t\t\tvar command = _n2.b;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tupdatedModel,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$Task$perform,\n\t\t\t\t\t\t\telm$core$Basics$always(\n\t\t\t\t\t\t\t\tauthor$project$Main$ScrollToBottom('terminal')),\n\t\t\t\t\t\t\telm$core$Process$sleep(100)));\n\t\t\t\t} else {\n\t\t\t\t\treturn _Utils_Tuple2(model, elm$core$Platform$Cmd$none);\n\t\t\t\t}\n\t\t\tcase 3:\n\t\t\t\tvar _n3 = author$project$Main$typer(model.N);\n\t\t\t\tvar status = _n3.a;\n\t\t\t\tvar state = _n3.b;\n\t\t\t\tvar cmd = function () {\n\t\t\t\t\tif (status === 1) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$core$Task$perform,\n\t\t\t\t\t\t\tauthor$project$Main$KeyDown,\n\t\t\t\t\t\t\telm$core$Task$succeed(13));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elm$core$Platform$Cmd$none;\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tt: state.a,\n\t\t\t\t\t\t\tN: _Utils_Tuple2(status, state)\n\t\t\t\t\t\t}),\n\t\t\t\t\tcmd);\n\t\t\tcase 4:\n\t\t\t\tvar container = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tmodel,\n\t\t\t\t\tauthor$project$Main$jumpToBottom(container));\n\t\t\tdefault:\n\t\t\t\tvar time = msg.a;\n\t\t\t\tvar pTime = author$project$Main$prettyTime(time);\n\t\t\t\tvar nl = model.a + ('\\n' + ('Log time: ' + (pTime + ' [UTC] on bogdannenu.com')));\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{a: nl}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar author$project$Main$Stdin = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$json$Json$Decode$field = _Json_decodeField;\nvar elm$json$Json$Decode$int = _Json_decodeInt;\nvar elm$html$Html$Events$keyCode = A2(elm$json$Json$Decode$field, 'keyCode', elm$json$Json$Decode$int);\nvar elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar author$project$Main$onKeyDown = function (tagger) {\n\treturn A2(\n\t\telm$html$Html$Events$on,\n\t\t'keydown',\n\t\tA2(elm$json$Json$Decode$map, tagger, elm$html$Html$Events$keyCode));\n};\nvar elm$html$Html$div = _VirtualDom_node('div');\nvar elm$html$Html$p = _VirtualDom_node('p');\nvar elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar elm$html$Html$text = elm$virtual_dom$VirtualDom$text;\nvar author$project$Main$viewLog = function (log) {\n\tvar lines = A2(\n\t\telm$core$List$map,\n\t\tfunction (x) {\n\t\t\treturn A2(\n\t\t\t\telm$html$Html$p,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text(x)\n\t\t\t\t\t]));\n\t\t},\n\t\tA2(elm$core$String$split, '\\n', log));\n\treturn A2(elm$html$Html$div, _List_Nil, lines);\n};\nvar elm$html$Html$input = _VirtualDom_node('input');\nvar elm$html$Html$span = _VirtualDom_node('span');\nvar elm$json$Json$Encode$bool = _Json_wrap;\nvar elm$html$Html$Attributes$boolProperty = F2(\n\tfunction (key, bool) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$bool(bool));\n\t});\nvar elm$html$Html$Attributes$autofocus = elm$html$Html$Attributes$boolProperty('autofocus');\nvar elm$json$Json$Encode$string = _Json_wrap;\nvar elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$string(string));\n\t});\nvar elm$html$Html$Attributes$class = elm$html$Html$Attributes$stringProperty('className');\nvar elm$html$Html$Attributes$id = elm$html$Html$Attributes$stringProperty('id');\nvar elm$html$Html$Attributes$type_ = elm$html$Html$Attributes$stringProperty('type');\nvar elm$html$Html$Attributes$value = elm$html$Html$Attributes$stringProperty('value');\nvar elm$html$Html$Events$alwaysStop = function (x) {\n\treturn _Utils_Tuple2(x, true);\n};\nvar elm$virtual_dom$VirtualDom$MayStopPropagation = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$html$Html$Events$stopPropagationOn = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$MayStopPropagation(decoder));\n\t});\nvar elm$json$Json$Decode$at = F2(\n\tfunction (fields, decoder) {\n\t\treturn A3(elm$core$List$foldr, elm$json$Json$Decode$field, decoder, fields);\n\t});\nvar elm$json$Json$Decode$string = _Json_decodeString;\nvar elm$html$Html$Events$targetValue = A2(\n\telm$json$Json$Decode$at,\n\t_List_fromArray(\n\t\t['target', 'value']),\n\telm$json$Json$Decode$string);\nvar elm$html$Html$Events$onInput = function (tagger) {\n\treturn A2(\n\t\telm$html$Html$Events$stopPropagationOn,\n\t\t'input',\n\t\tA2(\n\t\t\telm$json$Json$Decode$map,\n\t\t\telm$html$Html$Events$alwaysStop,\n\t\t\tA2(elm$json$Json$Decode$map, tagger, elm$html$Html$Events$targetValue)));\n};\nvar author$project$Main$view = function (model) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$id('terminal')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$class('container')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tauthor$project$Main$viewLog(model.a),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$span,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$text(model.S)\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$input,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$type_('text'),\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$class('input'),\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$value(model.t),\n\t\t\t\t\t\t\t\tauthor$project$Main$onKeyDown(author$project$Main$KeyDown),\n\t\t\t\t\t\t\t\telm$html$Html$Events$onInput(author$project$Main$Stdin),\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$autofocus(true)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar elm$browser$Browser$element = _Browser_element;\nvar author$project$Main$main = elm$browser$Browser$element(\n\t{\n\t\taO: function (_n0) {\n\t\t\treturn author$project$Main$init;\n\t\t},\n\t\taW: author$project$Main$subscriptions,\n\t\taY: author$project$Main$update,\n\t\ta_: author$project$Main$view\n\t});\n_Platform_export({'Main':{'init':author$project$Main$main(\n\telm$json$Json$Decode$succeed(0))(0)}});}(this));","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"./main.css\";\nimport { Elm } from \"./Main.elm\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nconst root = document.getElementById(\"root\");\n\nElm.Main.init({\n  node: root\n});\n\nregisterServiceWorker();\n"],"sourceRoot":""}